- active_menu :resumes
- experiences = @resume.experiences_by_kind

.container
  .row
    .col-md-8.col-md-offset-2.col-xs-12
      %h2.title
        = @resume.name
      .btn-group
        - if can? :destroy, @resume
          %a.btn.btn-default{ :href => url_for([:delete, @resume]) }
            = t('actions.delete')
        - if can? :edit, @resume
          %a.btn.btn-default{ :href => url_for([:edit, @resume]) }
            = t('actions.edit')
        %a.btn.btn-primary{ :href => url_for(resume_path(@resume, format: :pdf)) }
          %i.fa.fa-file-text-o
          = t('actions.download')

      - if @resume.image?
        = link_to @resume.image.url, class: 'profile image' do
          %img{ src: @resume.image.small.url, alt: '' }/


      %dl
        = attribute_definition :street, @resume.street, :resume
        = attribute_definition :postcode, @resume.postcode, :resume
        = attribute_definition :city, @resume.city, :resume
        = attribute_definition :email, mail_to(@resume.email), :resume
        = attribute_definition :phone, @resume.phone, :resume
        - if @resume.linkedin_url?
          = attribute_definition :linkedin_url, link_to(@resume.linkedin_url, @resume.full_linkedin_url), :resume
        - else
          = attribute_definition :linkedin_url, t('attributes.resume.no_linkedin'), :resume

      %h3= t_attribute :resume, :skills
      %ul.tags
        - @resume.skills.each do |s|
          %li.tag= s.name

      = render partial: 'experience_for_kind', locals: { kind: 'education',  experiences: experiences['education'], resume: @resume}
      - (Experience::KINDS - %w(education)).each do |kind|
        = render partial: 'experience_for_kind', locals: { kind: kind,  experiences: experiences[kind], resume: @resume}
      - if can?(:edit, @resume)
        %a.btn.btn-primary{ :href => url_for([:new, @resume, :experience])}
          %i.fa.fa-plus
            = t('actions.add')